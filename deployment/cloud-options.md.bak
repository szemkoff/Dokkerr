---
title: Deployment Options
description: Cloud provider options and deployment instructions for Dokkerr
---

# Deployment Options

## Recommended Cloud Providers

### 1. DigitalOcean (Recommended for Startups)
- **Cost**: Starting at $20-40/month
- **Benefits**:
  - Simple Kubernetes setup
  - Managed databases
  - Built-in monitoring
- **Setup Time**: ~30 minutes

### 2. AWS (Enterprise Scale)
- **Cost**: Starting at $50-100/month
- **Benefits**:
  - Global infrastructure
  - Advanced security features
  - Complete ecosystem
- **Setup Time**: ~1-2 hours

### 3. Google Cloud (Alternative)
- **Cost**: Starting at $30-60/month
- **Benefits**:
  - Strong Kubernetes integration
  - Good AI/ML capabilities
  - Global network
- **Setup Time**: ~1 hour

## Quick Deploy Instructions

### DigitalOcean Deployment

1. **Initial Setup**:
```bash
# Install doctl
brew install doctl  # Mac
snap install doctl  # Linux

# Authenticate
doctl auth init

# Create Kubernetes cluster
doctl kubernetes cluster create dokkerr-cluster \
  --region nyc1 \
  --size s-2vcpu-4gb \
  --count 3
```

2. **Configure Secrets**:
```bash
# Create secrets
kubectl create secret generic dokkerr-secrets \
  --from-literal=database-url='postgres://user:pass@host:5432/dokkerr' \
  --from-literal=jwt-secret='your-secure-jwt-secret'

# Create database
doctl databases create dokkerr-db \
  --engine pg \
  --size db-s-1vcpu-1gb \
  --region nyc1
```

3. **Deploy Application**:
```bash
# Deploy Kubernetes resources
kubectl apply -f k8s/deployment.yml

# Verify deployment
kubectl get pods
kubectl get services
```

### AWS Deployment

1. **Initial Setup**:
```bash
# Install AWS CLI
brew install awscli  # Mac
apt install awscli   # Linux

# Configure AWS
aws configure

# Create EKS cluster
eksctl create cluster \
  --name dokkerr-cluster \
  --region us-east-1 \
  --nodes 3 \
  --node-type t3.small
```

2. **Configure RDS**:
```bash
# Create database
aws rds create-db-instance \
  --db-instance-identifier dokkerr-db \
  --db-instance-class db.t3.micro \
  --engine postgres \
  --master-username dokkerr \
  --master-user-password 'your-password'
```

3. **Deploy Application**:
```bash
# Update kubeconfig
aws eks update-kubeconfig --name dokkerr-cluster

# Deploy application
kubectl apply -f k8s/deployment.yml
```

## Domain and SSL Setup

### 1. Domain Configuration
```bash
# DigitalOcean
doctl compute domain create dokkerr.com

# AWS Route53
aws route53 create-hosted-zone --name dokkerr.com
```

### 2. SSL Certificate
```bash
# Install cert-manager
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.0/cert-manager.yaml

# Create certificate
kubectl apply -f - <<EOF
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: dokkerr-tls
spec:
  secretName: dokkerr-tls
  dnsNames:
  - dokkerr.com
  - www.dokkerr.com
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
EOF
```

## Monitoring Setup

### 1. Metrics Server
```bash
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
```

### 2. Prometheus & Grafana
```bash
# Add Helm repo
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

# Install Prometheus
helm install prometheus prometheus-community/kube-prometheus-stack

# Access Grafana
kubectl port-forward svc/prometheus-grafana 3000:80
```

## Cost Optimization

### Recommended Configurations

1. **Development Environment**:
   - 2 nodes (t3.small/DO basic)
   - 1 RDS instance (db.t3.micro)
   - Estimated cost: $40-60/month

2. **Production Environment**:
   - 3-5 nodes (t3.medium/DO regular)
   - RDS with replica (db.t3.small)
   - Estimated cost: $150-200/month

### Auto-scaling Configuration
```yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dokkerr-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dokkerr-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
```

## Deployment Checklist

- [ ] Choose cloud provider
- [ ] Set up Kubernetes cluster
- [ ] Configure database
- [ ] Set up secrets
- [ ] Deploy application
- [ ] Configure SSL/domain
- [ ] Set up monitoring
- [ ] Configure backups
- [ ] Test scaling
- [ ] Document access credentials 